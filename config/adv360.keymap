/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
    behaviors {
      #include "macros.dtsi"

      bhm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      shm: shift_hr_mod {
          compatible = "zmk,behavior-hold-tap";
          label = "SHIFT_HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <180>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5    &tog 1                                                                 &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T     &tog 4                                                                 &none   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &bhm LGUI A     &bhm LCTRL S     &bhm LALT D      &shm LSHIFT F   &kp G     &none  &kp LGUI  &kp LALT                  &kp LGUI  &kp RCTRL      &none   &kp H   &shm RSHIFT J      &bhm LALT K     &bhm RCTRL L  &bhm RGUI SEMI    &kp SQT
 &kp LSHIFT      &kp Z     &kp X     &kp C      &kp V   &kp B                      &kp HOME                    &kp PG_DN &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHIFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC      &mo 1  &kp SQT                   &kp BSLH  &lt 2 ENTER  &kp SPACE          &kp LBRC   &kp RBRC  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                                       &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT     &none                                                                        &none &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
        &trans  &kp N1   &kp N2 &kp N3   &kp N4   &kp N5        &none           &kp LCTRL &kp LALT                  &kp LGUI  &kp RCTRL           &none &kp N6 &kp N7 &kp N8  &kp N9 &kp N0 &trans
        &trans  &kp ESC   &kp PLUS &kp MINUS   &kp EQUAL   &kp UNDER&kp HOME    &kp PG_UP &kp BSLH                  &kp LBKT  &kp  RBKT     &kp LBRC &kp RBRC &kp TILDE
        &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &trans &trans &trans                    &trans &trans &trans              &kp UP     &kp DOWN     &kp LBKT    &kp RBKT        &mo 2
      >;
        };

        layer_fn {
            bindings = <
      &kp F1     &kp F2     &kp F3     &kp F4     &kp F5  &kp F6             &tog 1                                                                  &mo 3              &kp F7              &kp F8          &kp F9              &kp F10              &kp F11     &kp F12
 &kp LG(TAB)     &kp TAB     &kp LS(LA(LC(LG(W))))     &kp LS(LA(LC(LG(E))))     &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))              &none                                                                  &none  &kp LG(LEFT_ARROW)  &kp LA(LEFT_ARROW)    &kp UP_ARROW  &kp LA(RIGHT_ARROW)  &kp RG(RIGHT_ARROW)      &trans
 &kp LG(TAB)   &bhm LGUI ESC   &bhm LCTRL C_NEXT   &bhm LALT C_VOL_DN   &shm LSHIFT C_VOL_UP &kp C_PP              &none  &trans  &trans                  &kp LS(LG(LBKT))     &trans     &none              &trans      &kp LEFT_ARROW  &kp DOWN_ARROW      &kp RIGHT_ARROW               &trans      &trans
  &kp LSHIFT  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans              &trans                   &kp LS(LG(RBKT))              &trans              &trans    &trans         &trans               &trans  &kp RSHIFT
      &trans     &trans     &trans     &trans     &trans          &kp LA(BACKSPACE)  &trans  &trans                            &trans  &kp EQUAL  &trans                              &trans      &trans               &trans               &trans      &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none             &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none  &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                                        &none                  &none             &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                       &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        game_layer {
            bindings = <
                &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog 1                                                           &mo 3 &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
                &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &tog 4                                                            &none &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
                &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
                &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                           &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                &mo 2     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE              &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
            >;
        };
    };
};
